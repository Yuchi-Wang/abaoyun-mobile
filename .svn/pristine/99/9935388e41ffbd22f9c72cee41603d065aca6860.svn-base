import axios from 'axios'
import { Toast, Dialog } from 'vant'
import { getToken } from '@/utils/auth'
import router from '@/router'

// create an axios instance
const service = axios.create({
  baseURL: process.env.BASE_API,
  timeout: 25000
})

service.interceptors.request.use(
  config => {
  const token = getToken()
  if (token) {
      config.headers['Authorization'] = token
    }
    return config
  },
  error => {
    console.log(error)
    Promise.reject(error)
  }
)

service.interceptors.response.use(
  response => {
   const res = response.data
    if (res.errno === 401) {
      Dialog.alert({
        title: '提示',
        message: '系统未登录，请重新登录',
      }).then(() => {
        router.replace('/login')
      })
      return Promise.reject('error')
    } else if (res.errno === 502 || res.errno === 500) {
      Dialog.alert({
        title: '提示',
        message: '系统内部错误，请联系管理员维护',
      }).then(() => {
        // on close
      })
      return Promise.reject('error')
    } else if (res.errno !== 0) {
      return Promise.reject(response)
    } else {
      return response
    }
  },
  error => {
  console.log('err' + error)
  Toast('登录连接超时（后台不能连接，请联系系统管理员）')
  return Promise.reject(error)
})
  
export default service